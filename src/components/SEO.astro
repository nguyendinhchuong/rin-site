---
import { getCanonicalUrl, getAlternateLinks } from '@/lib/seo';

interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article' | 'product';
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  keywords?: string[];
  schema?: object;
  noindex?: boolean;
}

const {
  title,
  description,
  image,
  type = 'website',
  publishedTime,
  modifiedTime,
  author,
  keywords,
  schema,
  noindex = false,
} = Astro.props;

const canonicalURL = getCanonicalUrl(Astro.url.pathname, Astro.site?.toString() || '');
const alternateLinks = getAlternateLinks(Astro.url.pathname, Astro.site?.toString() || '', ['vi', 'en']);

const currentLocale = Astro.url.pathname.startsWith('/en') ? 'en' : 'vi';
const ogImage = image || `${Astro.site}og-image.jpg`;
---

<!-- Basic Meta Tags -->
<title>{title}</title>
<meta name="description" content={description} />
{keywords && keywords.length > 0 && <meta name="keywords" content={keywords.join(', ')} />}
{author && <meta name="author" content={author} />}

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Alternate Language Links -->
{alternateLinks.map((link) => (
  <link rel="alternate" hreflang={link.lang} href={link.url} />
))}
<link rel="alternate" hreflang="x-default" href={`${Astro.site}vi${Astro.url.pathname.replace(/^\/(vi|en)/, '')}`} />

<!-- Open Graph -->
<meta property="og:type" content={type} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={ogImage} />
<meta property="og:locale" content={currentLocale === 'vi' ? 'vi_VN' : 'en_US'} />
<meta property="og:site_name" content="Vinh Son" />

{type === 'article' && publishedTime && <meta property="article:published_time" content={publishedTime} />}
{type === 'article' && modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
{type === 'article' && author && <meta property="article:author" content={author} />}

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={ogImage} />

<!-- Robots -->
{noindex && <meta name="robots" content="noindex, nofollow" />}

<!-- Structured Data (JSON-LD) -->
{schema && (
  <script type="application/ld+json" set:html={JSON.stringify({
    '@context': 'https://schema.org',
    ...schema,
  })} />
)}

